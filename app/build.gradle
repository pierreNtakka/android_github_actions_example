plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.google.services)
    alias(libs.plugins.app.distribution)
}

apply from: "firebase-app-distribution.gradle"

android {
    namespace 'com.pditta.githubactions'
    compileSdk 34

    defaultConfig {
        applicationId "com.pditta.githubactions"
        minSdk 24
        targetSdk 34
        versionCode APP_VERSION_CODE.toInteger()
        versionName APP_VERSION_NAME.toString()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    def firebaseReleaseNote = "GitHub Actions Example %s"

    firebaseAppDistribution {
        artifactType = "APK"
    }

    flavorDimensions = ["example"]

    productFlavors {
        dev {
            dimension "example"
            applicationIdSuffix ".work"
            firebaseAppDistribution.groups = "testers"
            firebaseAppDistribution.releaseNotes = String.format(firebaseReleaseNote, "WORK")
        }
        uat {
            dimension "example"
            applicationIdSuffix ".uat"
            firebaseAppDistribution.releaseNotes = String.format(firebaseReleaseNote, "UAT")
            firebaseAppDistribution.groups = "testers"
        }
        preProd {
            dimension "example"
            applicationIdSuffix ".preprod"
            firebaseAppDistribution.releaseNotes = String.format(firebaseReleaseNote, "PREPROD")
            firebaseAppDistribution.groups = "testers"
        }
        prod {
            dimension "example"
            applicationIdSuffix ".prod"
            firebaseAppDistribution.releaseNotes = String.format(firebaseReleaseNote, "PROD")
            firebaseAppDistribution.groups = "testers"
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3

    implementation platform(libs.firebase.bom)

    implementation project(path: '::myTestLibrary')

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4


    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}