name: Python Example

on:
  workflow_dispatch:
    inputs:
      versionToDelete:
        type: string
        description: Specificare la versione da cancellare
        required: true
        default: '25.03.0.16'
      debug:
        type: boolean
        description: Printa dei valori che aiutano il debug
        default: true

env:
  PACKAGE_NAME: "com.pditta.githubactions.mytestlibrary"

jobs:
  python-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Controlla versione Python
        run: python scripts/check_python_version.py
  
  delete-package-registry:
    runs-on: ubuntu-latest
    needs: python-version
    strategy:
      matrix:
        flavour: [ dev-release, uat-release, preProd-release, prod-release ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Delete ${{ env.VERSION_TO_DELETE }}
        id: delete_pkg_registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_TO_DELETE: ${{ inputs.versionToDelete }}-${{ matrix.flavour }}
        run: python scripts/delete_pkg_registry.py

  delete-release:
    runs-on: ubuntu-latest
    needs: delete-package-registry
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Delete Release
        id: delete_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_TO_DELETE: ${{ inputs.versionToDelete }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: python scripts/delete_release.py
  
  remove-tag:
    runs-on: ubuntu-latest
    needs: delete-release
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Set up Git
        uses: ./.github/actions/setup-git

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/${{ inputs.versionToDelete }}"; then
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
          fi

      - name: Delete Git Tag
        if: ${{ steps.check_tag.outputs.TAG_EXISTS == 'true' }}
        run: |
          git push origin --delete ${{ inputs.versionToDelete }}