name: Android SDK CI V2

on:
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        description: Printa dei valori che aiutano il debug
        default: true
      uploadWorkFlavourPkgRegistry:
        type: boolean
        description: Effettua il caricamento del SDK Work sul PKG Registry
        default: false
      uploadPreProdFlavourPkgRegistry:
        type: boolean
        description: Effettua il caricamento del SDK Work sul PKG Registry
        default: false

jobs:
  create-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        id: checkout_repository
        uses: actions/checkout@v4

      - name: Set up Git
        id: set_up_git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push new branch
        id: create_branch
        run: |
          NEW_BRANCH="creating-release-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$NEW_BRANCH"
          git push origin "$NEW_BRANCH"
          echo "branch_name=$NEW_BRANCH" >> GITHUB_OUTPUT
          echo "New branch $NEW_BRANCH created and pushed"

  testing:
    needs: create-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch "testing"
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-branch.outputs.branch_name }}

      - name: Print working branch value
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          echo "Working branch is: ${{ needs.create-branch.outputs.branch_name }}"

      - name: Set up JDK 20
        uses: actions/setup-java@v4
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Print Java & Gradle version
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          java --version
          ./gradlew --version

      - name: Execute testing
        run: |
          ./gradlew :app:testing

  increment-version:
    needs: [ create-branch, testing ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch "testing"
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-branch.outputs.branch_name }}

      - name: Print working branch value
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          echo "Working branch is: ${{ needs.create-branch.outputs.branch_name }}"

      - name: Set up JDK 20
        uses: actions/setup-java@v4
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Print Java & Gradle version
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          java --version
          ./gradlew --version

      - name: Disable local implementation
        run: |
          sed -i "s|^ENABLE_LOCAL_IMPLEMENTATION=.*|ENABLE_LOCAL_IMPLEMENTATION=false|" "gradle.properties"

      - name: Check current ENABLE_LOCAL_IMPLEMENTATION variable
        if: ${{ github.event.inputs.debug == 'true'}}
        run: |
          ./gradlew properties | grep ENABLE_LOCAL_IMPLEMENTATION

      - name: Print Version properties PRE incremented
        if: ${{ github.event.inputs.debug == 'true'}}
        run: |
          ./gradlew properties | grep APP_DEMO_VERSION_CODE
          ./gradlew properties | grep RELEASE_VERSION_NAME
          ./gradlew properties | grep BUILD_MAVEN_SDK_VERSION

      - name: Increment Maven Version
        run: |
          ./gradlew :myTestLibrary:incrementMavenVersion
          ./gradlew :app:incrementVersion

      - name: Print Version properties PRE incremented
        if: ${{ github.event.inputs.debug == 'true'}}
        run: |
          ./gradlew properties | grep APP_DEMO_VERSION_CODE
          ./gradlew properties | grep RELEASE_VERSION_NAME
          ./gradlew properties | grep BUILD_MAVEN_SDK_VERSION

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit And Push the incremented Version
        run: |
          
          APP_VERSION_CODE=$(./gradlew properties | grep "APP_VERSION_CODE" | sed 's/.*: //')
          BUILD_MAVEN_SDK_VERSION=$(./gradlew properties | grep "BUILD_MAVEN_SDK_VERSION" | sed 's/.*: //')
          RELEASE_VERSION_NAME=$(./gradlew properties | grep "RELEASE_VERSION_NAME" | sed 's/.*: //')
          
          git add .
          git commit -m "chore: Update app versionCode to: $APP_VERSION_CODE and versionName: BUILD_MAVEN_SDK_VERSION and maven version $RELEASE_VERSION_NAME"
          git push

  on-failure:
    runs-on: ubuntu-latest
    needs: [ create-branch, testing,increment-version ]
    if: failure()
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit And Push the incremented Version
        run: |
          git push origin â€“d ${{ needs.create-branch.outputs.branch_name }}