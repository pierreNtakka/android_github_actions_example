name: Android SDK CI

on:
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        description: Printa dei valori che aiutano il debug
        default: false
      mavenSdk:
        type: boolean
        description: Effettua il rilascio del SDK (tutti gli env) sul Gitlab Package Registry
        default: false

jobs:
  deliverable:
    runs-on: ubuntu-latest
    env:
      GPR_USER: ${{ github.actor }}
      GPR_API_KEY: ${{ secrets.MAVEN_UPLOAD_TOKEN }}

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Set up JDK 20
        uses: actions/setup-java@v4
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: gradle

      - name: File List
        run: ls -lrt
        if: ${{ github.event.inputs.debug == 'true' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Java version
        run: java --version
        if: ${{ github.event.inputs.debug == 'true' }}

      - name: Gradle Version
        run: ./gradlew --version
        if: ${{ github.event.inputs.debug == 'true' }}

      - name: Test Gradle env variable used
        run: ./gradlew retrieveEnvVariables
        if: ${{ github.event.inputs.debug == 'true' }}

      - name: Gradle All Tasks
        run: ./gradlew tasks --all
        if: ${{ github.event.inputs.debug == 'true' }}

        ##### SDK Variant ###########

      - name: Print SDK versionCode and versionName PRE incremented
        if: ${{ github.event.inputs.debug == 'true' && github.event.inputs.mavenSdk == 'true' }}
        run: |
          ./gradlew properties | grep SDK_VERSION_CODE
          ./gradlew properties | grep BUILD_MAVEN_SDK_VERSION

      - name: Increment SDK versionName and versionCode
        run: ./gradlew incrementMavenVersion
        if: ${{ github.event.inputs.mavenSdk == 'true' && github.event.inputs.mavenSdk == 'true' }}

      - name: Print SDK versionCode and versionName POST incremented
        if: ${{ github.event.inputs.debug == 'true' && github.event.inputs.mavenSdk == 'true'}}
        run: |
          ./gradlew properties | grep SDK_VERSION_CODE
          ./gradlew properties | grep BUILD_MAVEN_SDK_VERSION

      - name: Assemble SDK devRelease
        run: ./gradlew uploadToGitHubPkgDevRelease
        if: ${{ github.event.inputs.mavenSdk == 'true' }}

      - name: Assemble SDK uatRelease
        run: ./gradlew uploadToGitHubPkgUatRelease
        if: ${{ github.event.inputs.mavenSdk == 'true' }}

      - name: Assemble SDK preProdRelease
        run: ./gradlew uploadToGitHubPkgPreProdRelease
        if: ${{ github.event.inputs.mavenSdk == 'true' }}

      - name: Assemble SDK prodRelease
        run: ./gradlew uploadToGitHubPkgProdRelease
        if: ${{ github.event.inputs.mavenSdk == 'true' }}

      ##### AppDemo Variant ###########
      - name: Print AppDemo versionCode e versionName PRE incremented
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          ./gradlew properties | grep APP_VERSION_CODE
          ./gradlew properties | grep APP_VERSION_NAME

      - name: Increment App versionName and versionCode
        run: ./gradlew incrementVersion

      - name: Print AppDemo versionCode e versionName POST incremented
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          ./gradlew properties | grep APP_VERSION_CODE
          ./gradlew properties | grep APP_VERSION_NAME

      - name: Create JSON file from secret
        run: |
          # Create a directory to store the JSON file (optional)
          mkdir -p config
          
          # Write the secret to a JSON file
          echo '${{ secrets.APP_DISTR_FILE_CONTENT_KEY }}' > config/firebaseAppDistr.json
          
          # Export the path to the JSON file as an environment variable
          echo "MY_JSON_PATH=$PWD/config/firebaseAppDistr.json" >> $GITHUB_ACTIONS_EXAMPLE_APP_DISTR_FILE_KEY

      # Step 3: Print the environment variable to verify
      - name: Print the JSON path
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          echo "The JSON file is located at: $GITHUB_ACTIONS_EXAMPLE_APP_DISTR_FILE_KEY"

      - name: Assemble devDebug
        run: ./gradlew uploadToAppDistributionUatDebug

      - name: Assemble uatDebug
        run: ./gradlew uploadToAppDistributionUatDebug

      - name: Assemble preProdDebug
        run: ./gradlew uploadToAppDistributionPreprodDebug

      - name: Assemble prodDebug
        run: ./gradlew uploadToAppDistributionProdDebug

      - name: Clean up JSON file and environment variable
        if: always()
        run: |
          echo "Cleaning up..."
          
          # Remove the file if it exists
          if [ -f "$GITHUB_ACTIONS_EXAMPLE_APP_DISTR_FILE_KEY" ]; then
            rm $GITHUB_ACTIONS_EXAMPLE_APP_DISTR_FILE_KEY
            echo "JSON file removed."
          else
            echo "No JSON file found."
          fi
          
          # Remove the environment variable
          echo "Removing the GITHUB_ACTIONS_EXAMPLE_APP_DISTR_FILE_KEY environment variable."
          unset GITHUB_ACTIONS_EXAMPLE_APP_DISTR_FILE_KEY

      - name: Git Commit & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          
          APP_VERSION_NAME=$(./gradlew properties | grep "APP_VERSION_NAME" | sed 's/.*: //')
          APP_VERSION_CODE=$(./gradlew properties | grep "APP_VERSION_CODE" | sed 's/.*: //')
          SDK_VERSION_CODE=$(./gradlew properties | grep "SDK_VERSION_CODE" | sed 's/.*: //')
          BUILD_MAVEN_SDK_VERSION=$(./gradlew properties | grep "BUILD_MAVEN_SDK_VERSION" | sed 's/.*: //')

          GIT_COMMIT_MESSAGE="build(release): AppDemo: versionName: $APP_VERSION_NAME, versionCode: $APP_VERSION_CODE. SDK: versionName: $BUILD_MAVEN_SDK_VERSION, versionCode: $SDK_VERSION_CODE. Maven version: $BUILD_MAVEN_SDK_VERSION"
          
          git add .
          git commit -m "$GIT_COMMIT_MESSAGE"
          git push

      - name: Git Tag
        if: ${{ github.event.inputs.mavenSdk == 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          
          GIT_TAG_NAME=$(./gradlew properties | grep "BUILD_MAVEN_SDK_VERSION" | sed 's/.*: //')
          
          git tag $GIT_TAG_NAME
          git push origin $GIT_TAG_NAME